name: CI

on:
  merge_group:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
  workflow_dispatch:

env:
  FORCE_COLOR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

permissions: {}

jobs:
  build-python:
    name: Build & verify python package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for setuptools_scm version determination
      - uses: hynek/build-and-inspect-python-package@v2
        id: baipp
    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}

  test-go:
    name: "Test Go"
    needs: build-python
    strategy:
      fail-fast: false
      matrix:
        # https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners#supported-runners-and-hardware-resources
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for goreleaser version determination
      - name: Download pre-built packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Set COG_WHEEL
        run: echo COG_WHEEL=$(ls dist/*.whl) >>"$GITHUB_ENV"
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build
        run: make cog
      - name: Lint
        run: make lint-go || true
      - name: Test
        run: make test-go

  test-python:
    name: "Test Python ${{ matrix.python-version }}"
    needs: build-python
    runs-on: ubuntu-latest-8-cores
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(needs.build-python.outputs.python-versions) }}
    steps:
      - name: Download pre-built packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Set COG_WHEEL
        run: echo COG_WHEEL=$(ls dist/*.whl) >>"$GITHUB_ENV"
      - name: Extract source distribution
        run: tar xf dist/*.tar.gz --strip-components=1
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --no-cache uv
          python -m uv pip install "${COG_WHEEL}[dev]"
      - name: Lint
        run: |
          if [[ $(python -c 'import sys; print(sys.version_info >= (3, 10))') == "True" ]]; then
            make lint-python || true
          fi
      - name: Test
        run: make test-python
        env:
          HYPOTHESIS_PROFILE: ci

  # cannot run this on mac due to licensing issues: https://github.com/actions/virtual-environments/issues/2150
  test-integration:
    name: "Test integration"
    needs: build-python
    runs-on: ubuntu-latest-16-cores
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for goreleaser version determination
      - name: Download pre-built packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Set COG_WHEEL
        run: echo COG_WHEEL=$(ls dist/*.whl) >>"$GITHUB_ENV"
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Python dependencies
        run: |
          python -m pip install --no-cache uv
          python -m uv pip install "${COG_WHEEL}[dev]"
      - name: Test
        run: make test-integration
