[tox]
min_version = 4
env_list =
  py3{7,8,9,10,11,12,13}-pydantic{1,2}-tests
  lint
  typecheck-pydantic{1,2}
  integration

[coverage:paths]
source =
  python/cog
  .tox/*/lib/python*/site-packages/cog

[pytest]
addopts = --timeout=10

[testenv]
package = wheel
# Build the same wheel for all environments
wheel_build_env = .pkg
deps =
  pydantic1: pydantic>=1,<2
  pydantic2: pydantic>=2,<3
extras =
  tests: tests
pass_env =
  HYPOTHESIS_PROFILE
  FORCE_COLOR
set_env =
  tests: COVERAGE_FILE={env_dir}/.coverage
commands =
  tests: pytest python/tests --cov={env_site_packages_dir}/cog --cov-report term-missing:skip-covered {posargs:-n auto -vv}

[testenv:lint]
base_python = python3.12
skip_install = true
deps = ruff
commands =
  ruff check python/cog
  ruff format --check python

[testenv:typecheck-pydantic1]
base_python = python3.12
deps =
    pyright==1.1.375
    pydantic>=1,<2
# copy to envtmpdir so we can modify pyproject.toml
commands =
    cp -r python pyproject.toml {envtmpdir}
    sed -i 's/PYDANTIC_V2 = .*$/PYDANTIC_V2 = false/' {envtmpdir}/pyproject.toml
    pyright -p {envtmpdir} {posargs}
allowlist_externals =
    cp
    sed

[testenv:typecheck-pydantic2]
base_python = python3.12
deps =
    pyright==1.1.375
    pydantic>=2,<3
commands = pyright {posargs}

[testenv:integration]
base_python = python3.12
changedir = test-integration
skip_install = true
deps =
  pytest
  pytest-rerunfailures
  pytest-timeout
  pytest-xdist
commands = pytest {posargs:-n auto -vv --reruns 3}
